cleanDir() {
    local p=$(echo $1 | sed "s/~/\/Users\/$USERNAME/")
    local owner=$(stat -f%u:%g $p)
    local perm=$(stat -f%Mp%Lp $p)
    sudo rm -rf $p && sudo mkdir $p && sudo chown $owner $p && sudo chmod $perm $p && echo "$2 folder successfully cleared" || echo "Cannot remove $2 folder"
}

clean_brew() {
  echo "Cleaning brew"
  
  # brew cleanup -s --prune=0
  brew cleanup -s
  brew doctor
  brew missing
}

clean_docker() {
  echo "Cleaning Docker"

  docker images | grep -v REPOSITORY | awk "{print $1}" | xargs -L1 docker pull
}

clean_telegram(){
  echo "Cleaning Telegram media cache"

  kill -9 "$(pgrep Telegram)" >/dev/null 2>&1 && echo 'Telegram has been closed' || echo 'Telegram process is not running'
  echo 'Finding media to delete'
  local telegramfolder
  local telegramaccountfolder

  telegramfolder=$(find ~/Library/Group\ Containers -type d -maxdepth 1 -name "*.keepcoder.Telegram")
  telegramaccountfolder=$(find "${telegramfolder}/stable" -type d -maxdepth 1 -name "account-*")
  echo 'Removing Telegram media cache'
  cleanDir "${telegramaccountfolder}/postbox/media" 'Telegram media cache'
}

clean_cocoapods_cache() {
  echo "Cleaning Cocoapods cache"

  cleanDir "$HOME/Library/Caches/CocoaPods/" "Cocoapods cache"
  cleanDir "$HOME/Library/Caches/org.carthage.CarthageKit/" "Carthage cache"
}

clean_carthage_cache() {
  echo "Cleaning Carthage cache"

  cleanDir "$HOME/Library/Caches/org.carthage.CarthageKit/" "Carthage cache"
}

clean_brew_cache() {
  echo "Cleaning Homebrew cache"
  
  cleanDir "$HOME/Library/Caches/Homebrew/" "Homebrew cache"
}

clean_brew_logs() {
  echo "Cleaning Homebrew logs"
  cleanDir "$HOME/Library/Logs/Homebrew/" "Homebrew logs" "silent"
}

clean_npm_cache() {
  echo "Cleaning npm cache"

  cleanDir "$HOME/.npm/" "npm cache"
}

clean_yarn_cache() {
  echo "Cleaning yarn cache"
  cleanDir "$HOME/Library/Caches/Yarn/" "yarn cache"
}

clean_nvm_cache() {
  echo "Cleaning nvm cache"
  nvm cache clear
  nvm list | clean_nvm_cache
  nvm use system > /dev/null 2>&1
}

function clear_nvm_cache() {
    versions=()
    while read -r line; do
        clean=$(echo "${line}" | sed "s,$(printf '\033')\\[[0-9;]*[a-zA-Z],,g")
        valid=$(echo "${clean}" | grep '^[^a-zA-Z]' | grep -v 'system' | sed 's/->//' | sed 's/\s.*v//' | sed 's/N\/A//' | sed 's/[[:space:]]// g')
        if [[ ! -z $valid ]]; then
            versions+=("${valid}")
        fi
    done <<< "$(cat)"
    for version in "${versions[@]}"; do
        echo "trying clear nvm $version"
        nvm use "${version}" > /dev/null 2>&1
        npm cache clear -f --silent && echo "nvm cache of ${version} version has been removed" || echo "nvm cache of ${version} version cannot be removed"
    done
}

clean_xcode_cache() {
  echo "Cleaning Xcode cache"

  kill -9 "$(psgrep Xcode)" >/dev/null 2>&1
  cleanDir "$HOME/Library/Developer/CoreSimulator/Caches/dyld/" "Xcode cache"
  cleanDir "$HOME/Library/Developer/Xcode/Archives/" "Xcode cache" "silent"
  cleanDir "$HOME/Library/Developer/Xcode/DerivedData/" "Xcode Derived Data"
}

clean_browsers_cache() {
  echo "Cleaning Google Chrome cache"

  kill -9 "$(pgrep 'Google Chrome')" >/dev/null 2>&1
  cleanDir "$HOME/Library/Caches/Google/Chrome/" "Google Chrome cache"
  cleanDir "$HOME/Library/Application Support/Google/Chrome/" "Google Chrome cache" "silent"
  cleanDir "$HOME/Library/Caches/com.google.Chrome/" "Google Chrome cache" "silent"

  echo "Cleaning Chromium cache"
  kill -9 "$(pgrep Chromium)" >/dev/null 2>&1
  cleanDir "$HOME/Library/Caches/Chromium/" "Chromium cache"
  cleanDir "$HOME/Library/Application Support/Chromium/" "Chromium cache" "silent"

  echo "Cleaning Firefox cache"
  kill -9 "$(pgrep Firefox)" >/dev/null 2>&1
  cleanDir "$HOME/Library/Caches/Firefox/" "Mozilla Firefox cache"
  cleanDir "$HOME/Library/Caches/org.mozilla.firefox/" "Mozilla Firefox cache" "silent"
}

clean_discord_cache() {
  echo "Cleaning Discord cache"
  
  kill -9 "$(pgrep Discord)" >/dev/null 2>&1
  cleanDir "$HOME/Library/Application Support/discord/" "Discord cache"
}

clean_spotify_cache() {
  echo "Cleaning Spotify cache"
  
  kill -9 "$(pgrep Spotify)" >/dev/null 2>&1
  cleanDir "$HOME/Library/Application Support/Spotify/PersistentCache/Storage/" "Spotify cache"
}

clean_vscode_cache() {
  echo "Cleaning Visual Studio Code cache"
  kill -9 "$(pgrep Electron)" >/dev/null 2>&1
  cleanDir "$HOME/Library/Application Support/Code/Cache/" "Visual Studio Code cache"
  cleanDir "$HOME/Library/Application Support/Code/CachedData/" "Visual Studio Code cache" "silent"
  cleanDir "$HOME/Library/Application Support/Code - Insiders/Cache/" "Visual Studio - Insiders cache"
  cleanDir "$HOME/Library/Application Support/Code - Insiders/CachedData/" "Visual Studio Code - Insiders cache" "silent"

}


clean() {
  clean_brew
  clean_docker
  # clean_telegram
#   clean_cocoapods
#   clean_carthaage
#   clean_homebrew_cache
#   clean_npm_cache
#   clean_yarn_cache
#   clean_nvm_cache
#   clean_xcode_cache
#   clean_browsers_cache
#   clean_discord_cache
#   clean_spotify_cache
#   clean_vscode_cache
}
